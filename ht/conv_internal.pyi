# DO NOT EDIT - AUTOMATICALLY GENERATED BY tests/make_test_stubs.py!
from typing import List
from typing import (
    List,
    Optional,
    Union,
)


def Morimoto_Hotta(Re: float, Pr: float, Dh: float, Rm: float) -> float: ...


def Nu_conv_internal(
    Re: float,
    Pr: float,
    eD: float = ...,
    Di: Optional[float] = ...,
    x: Optional[float] = ...,
    fd: Optional[float] = ...,
    Method: Optional[str] = ...
) -> float: ...


def Nu_conv_internal_methods(
    Re: float,
    Pr: float,
    eD: float = ...,
    Di: Optional[float] = ...,
    x: Optional[float] = ...,
    fd: None = ...,
    check_ranges: bool = ...
) -> List[str]: ...


def Nu_laminar_rectangular_Shan_London(a_r: float) -> float: ...


def helical_turbulent_Nu_Mori_Nakayama(Re: float, Pr: float, Di: float, Dc: float) -> float: ...


def helical_turbulent_Nu_Schmidt(Re: float, Pr: float, Di: float, Dc: float) -> float: ...


def helical_turbulent_Nu_Xin_Ebadian(Re: float, Pr: float, Di: float, Dc: float) -> float: ...


def laminar_Q_const() -> float: ...


def laminar_T_const() -> float: ...


def laminar_entry_Baehr_Stephan(Re: float, Pr: float, L: float, Di: float) -> float: ...


def laminar_entry_Seider_Tate(
    Re: float,
    Pr: float,
    L: float,
    Di: float,
    mu: Optional[float] = ...,
    mu_w: Optional[float] = ...
) -> float: ...


def laminar_entry_thermal_Hausen(Re: float, Pr: float, L: float, Di: float) -> float: ...


def turbulent_Bhatti_Shah(Re: float, Pr: float, fd: float, eD: float) -> float: ...


def turbulent_Churchill_Zajic(Re: float, Pr: float, fd: float) -> float: ...


def turbulent_Colburn(Re: float, Pr: float) -> float: ...


def turbulent_Dipprey_Sabersky(Re: float, Pr: float, fd: float, eD: float) -> float: ...


def turbulent_Dittus_Boelter(Re: float, Pr: float, heating: bool = ..., revised: bool = ...) -> float: ...


def turbulent_Drexel_McAdams(Re: float, Pr: float) -> float: ...


def turbulent_ESDU(Re: float, Pr: float) -> float: ...


def turbulent_Friend_Metzner(Re: float, Pr: float, fd: float) -> float: ...


def turbulent_Gnielinski(Re: float, Pr: float, fd: float) -> float: ...


def turbulent_Gnielinski_smooth_1(Re: float, Pr: float) -> float: ...


def turbulent_Gnielinski_smooth_2(Re: float, Pr: float) -> float: ...


def turbulent_Gowen_Smith(Re: float, Pr: float, fd: float) -> float: ...


def turbulent_Kawase_De(Re: float, Pr: float, fd: float) -> float: ...


def turbulent_Kawase_Ulbrecht(Re: float, Pr: float, fd: float) -> float: ...


def turbulent_Martinelli(Re: float, Pr: float, fd: float) -> float: ...


def turbulent_Nunner(Re: float, Pr: float, fd: float, fd_smooth: float) -> float: ...


def turbulent_Petukhov_Kirillov_Popov(Re: float, Pr: float, fd: float) -> float: ...


def turbulent_Prandtl(Re: float, Pr: float, fd: float) -> float: ...


def turbulent_Sandall(Re: float, Pr: float, fd: float) -> float: ...


def turbulent_Sieder_Tate(Re: float, Pr: float, mu: Optional[float] = ..., mu_w: Optional[float] = ...) -> float: ...


def turbulent_Webb(Re: float, Pr: float, fd: float) -> float: ...


def turbulent_entry_Hausen(Re: float, Pr: float, Di: float, x: float) -> float: ...


def turbulent_von_Karman(Re: float, Pr: float, fd: float) -> float: ...

__all__: List[str]